plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
}

group = 'com.stefan'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.5")
}

dependencies {
	implementation fileTree(dir: '../libs-shared', include: '*.jar')

	implementation 'org.springframework.boot:spring-boot-starter-actuator:2.7.5'
	implementation 'org.springframework.boot:spring-boot-starter-webflux:2.7.5'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc:2.7.5'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.5'
	implementation 'org.springframework.boot:spring-boot-starter-websocket:2.7.5'

	implementation 'org.springframework.cloud:spring-cloud-commons:3.1.5'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:3.1.4'
	implementation 'org.springframework.cloud:spring-cloud-starter-config:3.1.5'

	implementation 'org.liquibase:liquibase-core:4.17.2'
	implementation 'io.r2dbc:r2dbc-postgresql:0.8.13.RELEASE'
	implementation 'org.postgresql:postgresql:42.5.0'

	implementation 'org.springdoc:springdoc-openapi-ui:1.6.12'
	implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.6.12'
	implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.6.12'

	implementation 'org.mapstruct:mapstruct:1.5.3.Final'

	compileOnly 'org.projectlombok:lombok:1.18.24'
	runtimeOnly 'com.h2database:h2:2.1.214'
	runtimeOnly 'io.r2dbc:r2dbc-h2:1.0.0.RELEASE'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.5'
	testImplementation 'io.projectreactor:reactor-test:3.4.24'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder:tiny'
	environment = ['BP_NATIVE_IMAGE': 'true']
}
